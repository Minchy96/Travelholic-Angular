package pmf.mina.bjelica.travelholic.dao;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import pmf.mina.bjelica.travelholic.model.dto.SearchDto;
import pmf.mina.bjelica.travelholic.model.entity.Post;

@Transactional
@Repository
public class PostRepositoryImpl implements PostRepositoryCustom {

	@PersistenceContext
	EntityManager entityManager;

	@Override
	public List<Post> filterPosts(SearchDto searchDto) {
		List<Post> posts ;
		String sql = "SELECT p FROM Post p ";
		boolean firstParm=false;
		Date start,end;
		
		if (searchDto.getCity() != null && !searchDto.getCity().isEmpty()) {
			if (firstParm == false) {
				firstParm = true;
				sql += " WHERE p.city = "+searchDto.getCity();
			} else {
				sql += " AND p.city = "+searchDto.getCity();
			}
		}
		
		if (searchDto.getCountry() != null && !searchDto.getCountry().isEmpty()) {
			if (firstParm == false) {
				firstParm = true;
				sql += " WHERE p.country =  "+searchDto.getCountry();
			} else {
				sql += " AND p.country = "+searchDto.getCountry();
			}
		}
		
		if (searchDto.getStart() != null && !searchDto.getStart().isEmpty()) {
			System.out.println("Usao ???????!");
			start = formateDate(searchDto.getStart());
			if (firstParm == false) {
				firstParm = true;
				sql += " WHERE p.start >= '"+start+"'";
			} else {
				sql += " AND  p.start >= '"+start+"'";
			}
		}
		
		if (searchDto.getEnd() != null && !searchDto.getEnd().isEmpty()) {
			System.out.println("Usao ???????!");
			end = formateDate(searchDto.getEnd());
			if (firstParm == false) {
				firstParm = true;
				sql += " WHERE p.end >= '"+end+"'";
			} else {
				sql += " AND  p.end <= '" + end +"'";
			}
		}
		
		System.out.println(sql);
		
		posts =  entityManager.createQuery(sql).getResultList();
		
		
		return posts;
	}
	
	Date formateDate(String strDate) {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		try {
			return sdf.parse(strDate);
		} catch (ParseException e) {
			e.printStackTrace();
			return null;
		} 
	}

}
